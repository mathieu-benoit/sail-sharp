# You need to set up Workload Identity Federation in your Google Cloud project in order to use this GitHub Actions definition: https://medium.com/p/3932dce678b8.
# And the secrets.GSA_ID needs to have the roles/artifactregistry.repoAdmin role in order push and delete container images.
name: open-pr
permissions:
  contents: read
on:
  pull_request:
env:
  ENVIRONMENT_ID: pr-${{ github.event.number }}
  IMAGE_NAME: ${{ secrets.REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REGISTRY_NAME }}/${{ vars.APP_NAME }}
  SCORE_COMPOSE_VERSION: 'latest'
  SCORE_HELM_VERSION: 'latest'
  SCORE_HUMANITEC_VERSION: 'latest'
  WORKLOAD_NAME: my-sample-app
jobs:
  deploy-preview-env:
    runs-on: ubuntu-latest
    env:
      BASE_ENVIRONMENT: 'development'
      ENVIRONMENT_TYPE: 'development'
      ENVIRONMENT_NAME: PR-${{ github.event.number }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: create humanitec preview env
        run: |
          .github/workflows/bin/humctl create environment ${{ env.ENVIRONMENT_ID }} \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              --context /orgs/${{ secrets.HUMANITEC_ORG }}/apps/${{ vars.APP_NAME }} \
              --name ${{ env.ENVIRONMENT_NAME }} \
              -t ${{ env.ENVIRONMENT_TYPE }} \
              --from ${{ env.BASE_ENVIRONMENT }} \
              || true
      - name: install score-humanitec
        uses: score-spec/setup-score@v2
        with:
          file: score-humanitec
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_HUMANITEC_VERSION }}
      - name: deploy score-humanitec
        run: |
          score-humanitec delta \
              --retry \
              --deploy \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              --org ${{ secrets.HUMANITEC_ORG }} \
              --app ${{ vars.APP_NAME }} \
              --env ${{ env.ENVIRONMENT_ID }} \
              -f score/score.yaml \
              --extensions score/humanitec.score.yaml \
              --message "$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${{ github.event.pull_request.commits_url }}?per_page=100" | jq -r .[-1].commit.message)" \
              --property containers.${{ env.WORKLOAD_NAME }}.image=${{ env.IMAGE_NAME }}@${{ env.ENVIRONMENT_ID }} \
              | tee score_output.json
      - name: wait for deployment
        run: |
          sleep 1
          IS_DONE=false
          CURRENT_STATUS=""
          while [ "$IS_DONE" = false ]; do
            CURRENT_STATUS=$(.github/workflows/bin/humctl get environment ${{ env.ENVIRONMENT_ID }} -o json \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              --context /orgs/${{ secrets.HUMANITEC_ORG }}/apps/${{ vars.APP_NAME }} \
              | jq -r .object.last_deploy.status)
            if [ "$CURRENT_STATUS" = "in progress" ]; then
              echo "Deployment still in progress..."
              sleep 1
            elif [ "$CURRENT_STATUS" = "failed" ]; then
              echo "Deployment failed!"
              IS_DONE=true
            else
              echo "Deployment successfully completed!"
              IS_DONE=true
            fi
          done
          echo $CURRENT_STATUS
          if [ "$CURRENT_STATUS" = "failed" ]; then
              exit 1
          fi
