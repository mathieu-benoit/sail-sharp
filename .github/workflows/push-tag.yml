# You need to set up Workload Identity Federation in your Google Cloud project in order to use this GitHub Actions definition: https://medium.com/p/3932dce678b8.
# And the secrets.GSA_ID needs to have the roles/artifactregistry.writer role in order push container images.
name: push-tag
permissions:
  contents: read
  id-token: write
  packages: write
on:
  push:
    tags:        
      - 'v*'
env:
  IMAGE_TAG: ${{ github.ref.name }}
  IMAGE_NAME: ${{ secrets.REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REGISTRY_NAME }}/${{ vars.APP_NAME }}
  ENVIRONMENT_ID: development
  SCORE_HUMANITEC_VERSION: 'latest'
jobs:
  build-push:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: authenticate to google cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.WI_PROVIDER_ID }}'
          service_account: '${{ secrets.GSA_ID }}'
      - name: install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: latest
      - name: sign-in to gar
        run: |
          gcloud auth configure-docker \
              ${{ secrets.REGISTRY_LOCATION }}-docker.pkg.dev \
              --quiet
      - name: build container
        run: |
          docker build \
              --tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              app/
      - name: push container to gar
        run: |
          docker push \
              ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      - name: login to ghcr
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login \
              ghcr.io \
              -u $ \
              --password-stdin
      - name: tag container for ghcr
        run: |
          docker tag \
              ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              ghcr.io/${{ github.repository_owner }}/${{ vars.APP_NAME }}:latest
      - name: push container in ghcr
        run: |
          docker push \
              ghcr.io/${{ github.repository_owner }}/${{ vars.APP_NAME }}:latest
  deploy-humanitec:
    needs: build-push
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: create humanitec app
        run: |
          .github/workflows/bin/humctl create app ${{ vars.APP_NAME }} \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              --context /orgs/${{ secrets.HUMANITEC_ORG }} \
              --name ${{ vars.APP_NAME }} \
              || true
      - name: install score-humanitec
        uses: score-spec/setup-score@v2
        with:
          file: score-humanitec
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_HUMANITEC_VERSION }}
      - name: authenticate to google cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.WI_PROVIDER_ID }}'
          service_account: '${{ secrets.GSA_ID }}'
      - name: setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: latest
      - name: sign-in to gar
        run: |
          gcloud auth configure-docker \
              ${{ secrets.REGISTRY_LOCATION }}-docker.pkg.dev \
              --quiet
      - name: get container image digest
        run: |
          echo "IMAGE_DIGEST=$(oras manifest fetch ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              --descriptor \
              | jq -r .digest)" >> ${{ github.env }}
      - name: notify humanitec
        run: |-
          .github/workflows/bin/humctl api POST /orgs/${{ secrets.HUMANITEC_ORG }}/artefact-versions \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              -d '{
                "name": "'${{ env.IMAGE_NAME }}'",
                "version": "'${{ env.IMAGE_TAG }}'",
                "digest": "'${IMAGE_DIGEST}'",
                "type": "container",
                "commit": "'$(echo ${{ github.sha }} | cut -c1-7)'",
                "ref": "'${{ github.ref }}'"
            }'
      - name: deploy score-humanitec
        run: |
          score-humanitec delta \
              --retry \
              --deploy \
              --token ${{ secrets.HUMANITEC_TOKEN }} \
              --org ${{ secrets.HUMANITEC_ORG }} \
              --app ${{ vars.APP_NAME }} \
              --env ${{ env.ENVIRONMENT_ID }} \
              -f score/score.yaml \
              --extensions score/humanitec.score.yaml \
              --property containers.${{ vars.APP_NAME }}.image=${{ env.IMAGE_NAME }}@${IMAGE_DIGEST}
